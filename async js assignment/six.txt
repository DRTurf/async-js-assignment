Purpose and Usage of localStorage and sessionStorage APIs

The localStorage and sessionStorage APIs are part of the Web Storage API, which provides a way to store data in the web browser. They allow developers to save key-value pairs in a web application, enhancing user experience by retaining information across page loads or sessions.

1. localStorage
- Purpose: localStorage is designed for long-term storage of data. The data persists even after the user closes the browser or navigates away from the page. It is useful for storing user preferences, application state, and other information that should be available across different sessions.
- Usage: Data stored in localStorage is accessible within the same origin (protocol, domain, and port). The data remains until it is explicitly deleted by the application or the user.

- Example: 
  - Store user preferences like theme and font size.
  - Retrieve user preferences when needed.
  - Remove specific items or clear all data when necessary.

2. sessionStorage
- Purpose: sessionStorage is designed for temporary storage of data. The data is available for the duration of the page session, which means it is retained as long as the browser tab is open. Once the tab is closed, the data is deleted. It is useful for storing information that is relevant only for the current session, such as form data or temporary application state.
- Usage: Similar to localStorage, data stored in sessionStorage is accessible only within the same origin. However, it is not shared across different tabs or windows.

- Example:
  - Store session-specific data like items in a shopping cart.
  - Retrieve session-specific data when needed.
  - Update or remove session-specific items as required, and clear all data when done.

