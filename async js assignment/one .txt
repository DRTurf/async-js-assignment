The XMLHttpRequest (XHR) object is a built-in JavaScript object that allows web pages to make HTTP requests to servers asynchronously. This means that it can retrieve data from a server without needing to reload the entire web page. This capability is a key component of AJAX (Asynchronous JavaScript and XML), which enables dynamic content updates on web pages.

### Key Features of XMLHttpRequest:

1. **Asynchronous Communication**: It allows sending and receiving data asynchronously, enabling web applications to update parts of a web page without a full refresh.
   
2. **Cross-Origin Requests**: It supports cross-origin requests (subject to the same-origin policy), which allows web applications to request resources from different domains, provided the server permits it.

3. **Supports Various Data Formats**: While initially designed for XML, it can handle different data formats, such as JSON, HTML, and plain text.

### How to Use XMLHttpRequest in AJAX:

1. **Create an XMLHttpRequest Object**:
   
   var xhr = new XMLHttpRequest();

2. **Configure the Request**:

    xhr.open('GET', 'https://api.example.com/data', true);

3. **Set Request Headers (if needed)**:

    xhr.setRequestHeader('Content-Type', 'application/json');

4. **Define a Callback Function**:

    xhr.onreadystatechange = function () {
    if (xhr.readyState === 4 && xhr.status === 200) {
        // Process the response
        var responseData = JSON.parse(xhr.responseText);
        console.log(responseData);
    }
};

5. **Send the Request**:

    xhr.send();